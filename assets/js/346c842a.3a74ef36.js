"use strict";(self.webpackChunkseata_website=self.webpackChunkseata_website||[]).push([[4303],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),l=u(r),g=a,f=l["".concat(c,".").concat(g)]||l[g]||d[g]||i;return r?n.createElement(f,o(o({ref:t},p),{},{components:r})):n.createElement(f,o({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=g;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[l]="string"==typeof e?e:a,o[1]=s;for(var u=2;u<i;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},35696:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var n=r(87462),a=(r(67294),r(3905));const i={title:"Eureka Registry Center",keywords:["Seata","Eureka","Registry Center"],description:"Eureka Registry Center."},o="Eureka Registry",s={unversionedId:"user/registry/eureka",id:"user/registry/eureka",title:"Eureka Registry Center",description:"Eureka Registry Center.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/user/registry/eureka.md",sourceDirName:"user/registry",slug:"/user/registry/eureka",permalink:"/docs/next/user/registry/eureka",draft:!1,editUrl:"https://github.com/apache/incubator-seata-website/blob/docusaurus/i18n/en/docusaurus-plugin-content-docs/current/user/registry/eureka.md",tags:[],version:"current",frontMatter:{title:"Eureka Registry Center",keywords:["Seata","Eureka","Registry Center"],description:"Eureka Registry Center."},sidebar:"docs",previous:{title:"Nacos Registry Center",permalink:"/docs/next/user/registry/nacos"},next:{title:"Etcd3 Registry Center",permalink:"/docs/next/user/registry/etcd3"}},c={},u=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"Adding Maven Dependencies",id:"adding-maven-dependencies",level:3},{value:"Configuring the Registry on the Client Side",id:"configuring-the-registry-on-the-client-side",level:3},{value:"Server-side configuration of the registry center",id:"server-side-configuration-of-the-registry-center",level:3}],p={toc:u},l="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(l,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"eureka-registry"},"Eureka Registry"),(0,a.kt)("p",null,"Eureka is an important registry implementation in the Seata component."),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("p",null,"Before integrating ",(0,a.kt)("inlineCode",{parentName:"p"},"Eureka")," into your Seata project, make sure that the Eureka Server service is already running in the background. If you are not familiar with the basic usage of Eureka, you can refer to the ",(0,a.kt)("a",{parentName:"p",href:"https://projects.spring.io/spring-cloud/spring-cloud.html#_service_discovery_eureka_clients"},"Eureka Quick Start")," for reference. It is recommended to use Eureka version ",(0,a.kt)("inlineCode",{parentName:"p"},"2.X")," or above."),(0,a.kt)("h2",{id:"quick-start"},"Quick Start"),(0,a.kt)("p",null,'The steps to integrate Eureka registry into Seata are very simple, and can be roughly divided into "Adding Maven Dependencies" and "Configuring the Registry".'),(0,a.kt)("h3",{id:"adding-maven-dependencies"},"Adding Maven Dependencies"),(0,a.kt)("p",null,"First, you need to add the Maven dependency of ",(0,a.kt)("inlineCode",{parentName:"p"},"spring-cloud-starter-netflix-eureka-client")," to your project's ",(0,a.kt)("inlineCode",{parentName:"p"},"pom.xml")," file. It is recommended to use Seata ",(0,a.kt)("inlineCode",{parentName:"p"},"1.4.0+"),". For the version relationship between ",(0,a.kt)("inlineCode",{parentName:"p"},"spring-cloud-starter-alibaba-seata")," and the corresponding microservice version, please refer to the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/alibaba/spring-cloud-alibaba/wiki/%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E"},"Version Description"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"\x3c!-- seata dependency --\x3e\n<dependency>\n    <groupId>io.seata</groupId>\n    <artifactId>seata-spring-boot-starter</artifactId>\n    <version>latest version</version>\n</dependency>\n<dependency>\n    <groupId>com.alibaba.cloud</groupId>\n    <artifactId>spring-cloud-starter-alibaba-seata</artifactId>\n    <version>2.1.2.RELEASE and above</version>\n    <exclusions>\n        <exclusion>\n            <groupId>io.seata</groupId>\n            <artifactId>seata-spring-boot-starter</artifactId>\n        </exclusion>\n    </exclusions>\n</dependency>\n\n\x3c!-- eureka client dependency --\x3e\n<dependency>\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>\n    <version>2.0.0.RELEASE and above</version>\n</dependency>\n")),(0,a.kt)("h3",{id:"configuring-the-registry-on-the-client-side"},"Configuring the Registry on the Client Side"),(0,a.kt)("p",null,"Add the corresponding configuration to ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/seata/seata/blob/2.x/script/client/spring/application.yml"},(0,a.kt)("strong",{parentName:"a"},"application.yml")),", and refer to the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/seata/seata/tree/2.x/script/client"},"Configuration Reference")," for other configurations."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"seata:\n  tx-service-group: default_tx_group\n  service:\n    vgroup-mapping:\n      default_tx_group: seata-server # Configure the corresponding value of registry.eureka.application on the Server side here\n  registry:\n    type: eureka\n    eureka:\n      service-url: http://localhost:8761/eureka\n")),(0,a.kt)("h3",{id:"server-side-configuration-of-the-registry-center"},"Server-side configuration of the registry center"),(0,a.kt)("p",null,"Add the corresponding configuration center in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/seata/seata/blob/2.x/server/src/main/resources/application.yml"},"conf/application.yml"),", and refer to the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/seata/seata/blob/2.x/server/src/main/resources/application.example.yml"},"configuration")," for the rest."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"seata:\n  registry:\n    type: eureka\n    eureka:\n      service-url: http://localhost:8761/eureka\n      application: seata-server \n      weight: 1\n")),(0,a.kt)("p",null,"After that, when Seata-Server is started, the Server-side service will appear in the registry center list in the Eureka console. After configuring the Client, you can start the application to experience the Seata service."))}d.isMDXComponent=!0}}]);