"use strict";(self.webpackChunkseata_website=self.webpackChunkseata_website||[]).push([[89556],{19294:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(74848),s=n(28453);const o={title:"Deploying Raft Cluster",keywords:["Seata"],description:"Server-Raft mode deploy"},a="Deploying Server-Raft",i={id:"ops/deploy-server-raft",title:"Deploying Raft Cluster",description:"Server-Raft mode deploy",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/ops/deploy-server-raft.md",sourceDirName:"ops",slug:"/ops/deploy-server-raft",permalink:"/seata.github.io/docs/next/ops/deploy-server-raft",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/incubator-seata-website/blob/docusaurus/i18n/en/docusaurus-plugin-content-docs/current/ops/deploy-server-raft.md",tags:[],version:"current",frontMatter:{title:"Deploying Raft Cluster",keywords:["Seata"],description:"Server-Raft mode deploy"},sidebar:"docs",previous:{title:"Deploy Server",permalink:"/seata.github.io/docs/next/ops/deploy-server"},next:{title:"Deploy Seata Server By Docker",permalink:"/seata.github.io/docs/next/ops/deploy-by-docker"}},l={},c=[{value:"Server",id:"server",level:2},{value:"Client",id:"client",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"deploying-server-raft",children:"Deploying Server-Raft"}),"\n",(0,r.jsx)(t.p,{children:"Seata-Raft mode is a transaction storage mode that integrates storage and computing, with high performance, easy scalability, low entry barriers, and low operational costs. For more detailed information about the architecture and usage, please click here."}),"\n",(0,r.jsx)(t.p,{children:"Note: Since this mode does not support integration with third-party registry centers, only one TC cluster is allowed for the entire chain, which means that the TC cluster corresponding to the client's transaction group must remain consistent. In the future, the Seata community will launch a self-contained NamingServer that is compatible with the Seata-Raft mode and supports multi-raft."}),"\n",(0,r.jsx)(t.h2,{id:"server",children:"Server"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Download the server application from ",(0,r.jsx)(t.a,{href:"https://github.com/apache/incubator-seata/releases",children:"RELEASE"})," and unzip."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Change config\nAdd the following parameters under seata: in the application.yml file in the conf."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"seata:\n  server:\n    raft:\n      group: default #This value represents the group of the Raft cluster, and the value corresponding to the client's transaction branch must correspond to it\n      server-addr: 192.168.0.111:9091,192.168.0.112:9091,192.168.0.113:9091 # The IP address and port of the 3 nodes, the port is the netty port of the node + 1000, and the default netty port is 8091\n      snapshot-interval: 600 # Take a snapshot of the data every 600 seconds to ensure fast rolling of the Raft log. However, if there is too much transaction data in memory during each snapshot, it may cause fluctuations in business response time (rt) every 600 seconds. Adjusting the snapshot interval to 30 minutes or 1 hour is also acceptable, depending on the specific business requirements. It is recommended to conduct performance testing to determine if there are any rt fluctuations. Find a balance point between rt fluctuations and fault recovery that suits your business needs.\n      apply-batch: 32 # Commit the Raft log with a maximum batch of 32 actions at a time.\n      max-append-bufferSize: 262144 #The maximum size of the log storage buffer is 256 KB by default.\n      max-replicator-inflight-msgs: 256 #\u5728When using pipeline requests, the maximum number of in-flight requests is 256 by default.\n      disruptor-buffer-size: 16384 #The size of the internal disruptor buffer is 16384 by default. If the write throughput is high, you may need to increase this value appropriately.\n      election-timeout-ms: 1000 #The duration after which a leader without heartbeat triggers a new election.\n      reporter-enabled: false # raft monitor enable\n      reporter-initial-delay: 60 # The interval between monitoring intervals.\n      serialization: jackson # Serialization method, do not modify.\n      compressor: none # The compression method used for the Raft log, such as gzip, zstd, lz4\uff0cetc\n      sync: true # The flushing method for Raft logs is synchronous flushing by default.\n  config:\n    # support: nacos, consul, apollo, zk, etcd3\n    type: file # This configuration can select different configuration centers.\n  registry:\n    # support: nacos, eureka, redis, zk, consul, etcd3, sofa\n    type: file # In Raft mode, it is not allowed to use non-file-based registry centers.\n  store:\n    # support: file \u3001 db \u3001 redis \u3001 raft\n    mode: raft # use raft mode\n    file:\n      dir: sessionStore # This path is the storage location for Raft logs and transaction-related logs. By default, it is a relative path, but it is recommended to set a fixed location.\n"})}),"\n",(0,r.jsxs)(t.p,{children:["If the addresses in server-addr: are all on the local machine, then you need to add an offset of 1000 to the Netty port for different servers on this machine. For example, if ",(0,r.jsx)(t.code,{children:"server.port: 7092"}),", the Netty port would be ",(0,r.jsx)(t.code,{children:"8092"}),", and the Raft election and communication port would be ",(0,r.jsx)(t.code,{children:"9092"}),". You need to add the startup parameter ",(0,r.jsx)(t.code,{children:"-Dserver.raftPort=9092"}),".\nOn Linux, you can specify the export ",(0,r.jsx)(t.code,{children:'JAVA_OPT="-Dserver.raftPort=9092"'})," command to set the desired value.\u3002"]}),"\n",(0,r.jsxs)(t.ol,{start:"3",children:["\n",(0,r.jsx)(t.li,{children:"Startup"}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"On Linux/Mac"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"$ sh ./bin/seata-server.sh\n"})}),"\n",(0,r.jsx)(t.p,{children:"On Windows"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-cmd",children:"bin\\seata-server.bat\n"})}),"\n",(0,r.jsxs)(t.ol,{start:"4",children:["\n",(0,r.jsx)(t.li,{children:"Volume expansion and contraction"}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:['Assuming the original cluster list is "192.168.0.111:7091, 192.168.0.112:7091, 192.168.0.113:7091", whether it is scaling or shrinking, only need to modify this string and submit it to the volume expansion and contraction interface of a member, such as scaling "curl -X POST -i ',(0,r.jsx)(t.a,{href:"http://192.168.0.111:7091/metadata/v1/changeCluster?raftClusterStr=192.168.0.111",children:"http://192.168.0.111:7091/metadata/v1/changeCluster?raftClusterStr=192.168.0.111"}),": 7091, 192.168.0.112:7091, 192.168.0.113:7091, 192.168.0.114:7091\" ', if it is scaling, only need to remove the nodes in the cluster connection string that need to be offline, and call the volume expansion and contraction interface.\nNote: The seata.server.raft.server-addr configuration is invalid as long as the cluster is built. Please perform volume expansion and contraction through the API. The subsequent console will also integrate volume expansion and contraction and cluster management functions."]}),"\n",(0,r.jsx)(t.h2,{id:"client",children:"Client"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["Change ",(0,r.jsx)(t.code,{children:"registry.type"})]}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"   registry:\n      type: raft\n      raft:\n         server-addr: 192.168.0.111:7091, 192.168.0.112:7091, 192.168.0.113:7091\n"})}),"\n",(0,r.jsxs)(t.ol,{start:"2",children:["\n",(0,r.jsx)(t.li,{children:"Change the TC cluster corresponding to the transaction group to the Raft group of the server."}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'seata:\n   tx-service-group: default_tx_group\n   service:\n      vgroup-mapping:\n         default_tx_group: If server.raft.group is set to "default", then this field should be set to "default" as well.\n'})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var r=n(96540);const s={},o=r.createContext(s);function a(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);