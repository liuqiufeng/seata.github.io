"use strict";(self.webpackChunkseata_website=self.webpackChunkseata_website||[]).push([[57476],{66941:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var r=t(74848),a=t(28453);const s={title:"How to use Seata to ensure consistency between Dubbo Microservices",keywords:["Dubbo","Seata","Consistency"],description:"This article will introduce you how to use Seata to ensure consistency between Dubbo Microservices.",author:"slievrly",date:new Date("2019-03-07T00:00:00.000Z")},i="How to use Seata to ensure consistency between Dubbo Microservices",o={permalink:"/seata.github.io/blog/quick-start-use-seata-and-dubbo-services",editUrl:"https://github.com/apache/incubator-seata-website/blob/docusaurus/i18n/en/docusaurus-plugin-content-blog/quick-start-use-seata-and-dubbo-services.md",source:"@site/i18n/en/docusaurus-plugin-content-blog/quick-start-use-seata-and-dubbo-services.md",title:"How to use Seata to ensure consistency between Dubbo Microservices",description:"This article will introduce you how to use Seata to ensure consistency between Dubbo Microservices.",date:"2019-03-07T00:00:00.000Z",formattedDate:"March 7, 2019",tags:[],readingTime:2.84,hasTruncateMarker:!1,authors:[{name:"slievrly"}],frontMatter:{title:"How to use Seata to ensure consistency between Dubbo Microservices",keywords:["Dubbo","Seata","Consistency"],description:"This article will introduce you how to use Seata to ensure consistency between Dubbo Microservices.",author:"slievrly",date:"2019-03-07T00:00:00.000Z"},unlisted:!1,prevItem:{title:"Introduction to TCC Theory and Design Implementation Guide",permalink:"/seata.github.io/blog/tcc-mode-design-principle"},nextItem:{title:"Unveiling the Principles of Fescar Distributed Transaction",permalink:"/seata.github.io/blog/seata-analysis-simple"}},c={authorsImageUrls:[void 0]},d=[{value:"Use case",id:"use-case",level:2},{value:"Architecture",id:"architecture",level:3},{value:"StorageService",id:"storageservice",level:3},{value:"OrderService",id:"orderservice",level:3},{value:"AccountService",id:"accountservice",level:3},{value:"Main business logic",id:"main-business-logic",level:3},{value:"Distributed Transaction Solution with Seata",id:"distributed-transaction-solution-with-seata",level:2},{value:"Example powered by Dubbo + Seata",id:"example-powered-by-dubbo--seata",level:2},{value:"Step 1: Setup database",id:"step-1-setup-database",level:3},{value:"Step 2: Create UNDO_LOG table for Seata",id:"step-2-create-undo_log-table-for-seata",level:3},{value:"Step 3: Create tables for example business",id:"step-3-create-tables-for-example-business",level:3},{value:"Step 4: Start Seata-Server",id:"step-4-start-seata-server",level:3},{value:"Step 5: Run example",id:"step-5-run-example",level:3},{value:"Related projects",id:"related-projects",level:3}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"use-case",children:"Use case"}),"\n",(0,r.jsx)(n.p,{children:"A business logic for user purchasing commodities. The whole business logic is powered by 3 microservices:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Storage service: deduct storage count on given commodity."}),"\n",(0,r.jsx)(n.li,{children:"Order service: create order according to purchase request."}),"\n",(0,r.jsx)(n.li,{children:"Account service: debit the balance of user's account."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"architecture",children:"Architecture"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Architecture",src:t(25195).A+"",width:"1468",height:"868"})}),"\n",(0,r.jsx)(n.h3,{id:"storageservice",children:"StorageService"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"public interface StorageService {\n\n    /**\n     * deduct storage count\n     */\n    void deduct(String commodityCode, int count);\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"orderservice",children:"OrderService"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"public interface OrderService {\n\n    /**\n     * create order\n     */\n    Order create(String userId, String commodityCode, int orderCount);\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"accountservice",children:"AccountService"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"public interface AccountService {\n\n    /**\n     * debit balance of user's account\n     */\n    void debit(String userId, int money);\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"main-business-logic",children:"Main business logic"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"public class BusinessServiceImpl implements BusinessService {\n\n    private StorageService storageService;\n\n    private OrderService orderService;\n\n    /**\n     * purchase\n     */\n    public void purchase(String userId, String commodityCode, int orderCount) {\n\n        storageService.deduct(commodityCode, orderCount);\n\n        orderService.create(userId, commodityCode, orderCount);\n    }\n}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"public class StorageServiceImpl implements StorageService {\n\n  private StorageDAO storageDAO;\n  \n    @Override\n    public void deduct(String commodityCode, int count) {\n        Storage storage = new Storage();\n        storage.setCount(count);\n        storage.setCommodityCode(commodityCode);\n        storageDAO.update(storage);\n    }\n}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"public class OrderServiceImpl implements OrderService {\n\n    private OrderDAO orderDAO;\n\n    private AccountService accountService;\n\n    public Order create(String userId, String commodityCode, int orderCount) {\n\n        int orderMoney = calculate(commodityCode, orderCount);\n\n        accountService.debit(userId, orderMoney);\n\n        Order order = new Order();\n        order.userId = userId;\n        order.commodityCode = commodityCode;\n        order.count = orderCount;\n        order.money = orderMoney;\n\n        return orderDAO.insert(order);\n    }\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"distributed-transaction-solution-with-seata",children:"Distributed Transaction Solution with Seata"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"undefined",src:t(11376).A+"",width:"1490",height:"852"})}),"\n",(0,r.jsxs)(n.p,{children:["We just need an annotation ",(0,r.jsx)(n.code,{children:"@GlobalTransactional"})," on business method:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"\n    @GlobalTransactional\n    public void purchase(String userId, String commodityCode, int orderCount) {\n        ......\n    }\n"})}),"\n",(0,r.jsx)(n.h2,{id:"example-powered-by-dubbo--seata",children:"Example powered by Dubbo + Seata"}),"\n",(0,r.jsx)(n.h3,{id:"step-1-setup-database",children:"Step 1: Setup database"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Requirement: MySQL with InnoDB engine."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note:"})," In fact, there should be 3 database for the 3 services in the example use case. However, we can just create one database and configure 3 data sources for simple."]}),"\n",(0,r.jsx)(n.p,{children:"Modify Spring XML with the database URL/username/password you just created."}),"\n",(0,r.jsx)(n.p,{children:"dubbo-account-service.xml\ndubbo-order-service.xml\ndubbo-storage-service.xml"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'    <property name="url" value="jdbc:mysql://x.x.x.x:3306/xxx" />\n    <property name="username" value="xxx" />\n    <property name="password" value="xxx" />\n'})}),"\n",(0,r.jsx)(n.h3,{id:"step-2-create-undo_log-table-for-seata",children:"Step 2: Create UNDO_LOG table for Seata"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"UNDO_LOG"})," table is required by Seata AT mode."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE `undo_log` (\n  `id` bigint(20) NOT NULL AUTO_INCREMENT,\n  `branch_id` bigint(20) NOT NULL,\n  `xid` varchar(100) NOT NULL,\n  `rollback_info` longblob NOT NULL,\n  `log_status` int(11) NOT NULL,\n  `log_created` datetime NOT NULL,\n  `log_modified` datetime NOT NULL,\n  `ext` varchar(100) DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  KEY `idx_unionkey` (`xid`,`branch_id`)\n) ENGINE=InnoDB AUTO_INCREMENT=159 DEFAULT CHARSET=utf8\n"})}),"\n",(0,r.jsx)(n.h3,{id:"step-3-create-tables-for-example-business",children:"Step 3: Create tables for example business"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"\nDROP TABLE IF EXISTS `storage_tbl`;\nCREATE TABLE `storage_tbl` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `commodity_code` varchar(255) DEFAULT NULL,\n  `count` int(11) DEFAULT 0,\n  PRIMARY KEY (`id`),\n  UNIQUE KEY (`commodity_code`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\n\nDROP TABLE IF EXISTS `order_tbl`;\nCREATE TABLE `order_tbl` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `user_id` varchar(255) DEFAULT NULL,\n  `commodity_code` varchar(255) DEFAULT NULL,\n  `count` int(11) DEFAULT 0,\n  `money` int(11) DEFAULT 0,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\n\nDROP TABLE IF EXISTS `account_tbl`;\nCREATE TABLE `account_tbl` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `user_id` varchar(255) DEFAULT NULL,\n  `money` int(11) DEFAULT 0,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n"})}),"\n",(0,r.jsx)(n.h3,{id:"step-4-start-seata-server",children:"Step 4: Start Seata-Server"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Download server ",(0,r.jsx)(n.a,{href:"https://github.com/apache/incubator-seata/releases",children:"package"}),", unzip it."]}),"\n",(0,r.jsx)(n.li,{children:"Start Seata-Server"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"sh seata-server.sh $LISTEN_PORT $PATH_FOR_PERSISTENT_DATA\n\ne.g.\n\nsh seata-server.sh 8091 /home/admin/seata/data/\n"})}),"\n",(0,r.jsx)(n.h3,{id:"step-5-run-example",children:"Step 5: Run example"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Start AccountService (",(0,r.jsx)(n.a,{href:"https://github.com/apache/incubator-seata-samples/blob/master/dubbo/src/main/java/com/seata/seata/samples/dubbo/starter/DubboAccountServiceStarter.java",children:"DubboAccountServiceStarter"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:["Start StorageService (",(0,r.jsx)(n.a,{href:"https://github.com/apache/incubator-seata-samples/blob/master/dubbo/src/main/java/com/seata/seata/samples/dubbo/starter/DubboStorageServiceStarter.java",children:"DubboStorageServiceStarter"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:["Start OrderService (",(0,r.jsx)(n.a,{href:"https://github.com/apache/incubator-seata-samples/blob/master/dubbo/src/main/java/com/seata/seata/samples/dubbo/starter/DubboOrderServiceStarter.java",children:"DubboOrderServiceStarter"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:["Run BusinessService for test (",(0,r.jsx)(n.a,{href:"https://github.com/apache/incubator-seata-samples/blob/master/dubbo/src/main/java/com/seata/seata/samples/dubbo/starter/DubboBusinessTester.java",children:"DubboBusinessTester"}),")."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"related-projects",children:"Related projects"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["seata:          ",(0,r.jsx)(n.a,{href:"https://github.com/apache/incubator-seata/",children:"https://github.com/apache/incubator-seata/"})]}),"\n",(0,r.jsxs)(n.li,{children:["seata-samples : ",(0,r.jsx)(n.a,{href:"https://github.com/apache/incubator-seata-samples",children:"https://github.com/apache/incubator-seata-samples"})]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},25195:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/seata-1-921f8d579a15d413c12f3542be7f5ffb.png"},11376:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/seata-2-3e4981c059d8c4d72aec440b06c30a65.png"},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var r=t(96540);const a={},s=r.createContext(a);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);